apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.fabric'
def versionMajor = 1
def versionMinor = 2
def versionPatch = 1
def versionBuild = 0

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "com.aaandroiddev.cryptowatcher"
        minSdkVersion 19
        targetSdkVersion 27

        versionCode versionMajor * 1000000 + versionMinor * 10000 + versionPatch * 100 + versionBuild
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
        multiDexEnabled true
    }
    buildTypes.each {
        it.resValue 'string', 'FABRIC_API_KEY', FABRIC_API_KEY
        it.resValue 'string', 'TWITTER_CONSUMER_KEY', TWITTER_CONSUMER_KEY
        it.resValue 'string', 'TWITTER_SECRET', TWITTER_SECRET
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        test.java.srcDirs += 'src/test/kotlin'
        androidTest.java.srcDirs += 'src/androidTest/kotlin'
    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${versions.kotlin}"
    implementation "com.android.support:appcompat-v7:${versions.supportLibrary}"
    implementation "com.android.support:cardview-v7:${versions.supportLibrary}"
    implementation "com.android.support:recyclerview-v7:${versions.supportLibrary}"
    implementation "com.android.support:design:${versions.supportLibrary}"
    implementation "com.android.support.constraint:constraint-layout:${versions.constraintLayout}"
    implementation "com.android.support:support-v4:${versions.supportLibrary}"

    implementation 'com.google.firebase:firebase-core:15.0.0'
    testImplementation "junit:junit:${versions.junit}"
    androidTestImplementation "com.android.support.test:runner:${versions.runner}"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:${versions.espressoCore}"
    //ViewModelSubComponent
    kapt "com.squareup:javapoet:${versions.javapoet}"
    //explicitly before ViewModelSubComponent to avoid exception noSuchMethodException
    implementation "com.google.dagger:dagger:${versions.dagger}"
    implementation "com.google.dagger:dagger-android:${versions.dagger}"
    implementation "com.google.dagger:dagger-android-support:${versions.dagger}"
    kapt "com.google.dagger:dagger-compiler:${versions.dagger}"
    kapt "com.google.dagger:dagger-android-processor:${versions.dagger}"
    //Rxbus
    implementation "com.hwangjr.rxbus:rxbus:${versions.rxbus}"
    //Retrofit
    implementation "com.squareup.retrofit2:retrofit:${versions.retrofit}"
    implementation "com.squareup.retrofit2:converter-gson:${versions.converterGson}"
    implementation "com.squareup.retrofit2:adapter-rxjava2:${versions.adapterRxjava2}"
    //RxJava
    implementation "io.reactivex.rxjava2:rxjava:${versions.rxjava}"
    implementation "io.reactivex.rxjava2:rxandroid:${versions.rxandroid}"
    implementation "io.reactivex.rxjava2:rxkotlin:${versions.rxkotlin}"
    implementation "com.jakewharton.rxbinding2:rxbinding-appcompat-v7-kotlin:${versions.rxbindingAppcompatV7Kotlin}"
    implementation "com.jakewharton.rxbinding2:rxbinding-design-kotlin:${versions.rxbindingDesignKotlin}"
    //Room
    kapt "android.arch.persistence.room:compiler:${versions.room}"
    implementation "android.arch.persistence.room:runtime:${versions.room}"
    implementation "android.arch.persistence.room:rxjava2:${versions.room}"
    //Other
    implementation "org.glassfish:javax.annotation:${versions.javaxAnnotation}"
    implementation "com.squareup.picasso:picasso:${versions.picasso}"
    implementation "com.github.PhilJay:MPAndroidChart:${versions.MPAndroidChart}"
    implementation "com.github.ybq:Android-SpinKit:${versions.AndroidSpinKit}"
    implementation "com.squareup.okhttp3:logging-interceptor:${versions.loggingInterceptor}"
    implementation "com.twitter.sdk.android:twitter-core:${versions.twitterCore}"
    implementation "com.twitter.sdk.android:tweet-ui:${versions.twitterUi}"

    debugImplementation "com.amitshekhar.android:debug-db:${versions.debugDb}"

    implementation "android.arch.lifecycle:viewmodel:${versions.viewModel}"
    implementation "android.arch.lifecycle:livedata:${versions.liveData}"
    implementation "com.crashlytics.sdk.android:crashlytics:${versions.crashlytics}"

}

apply plugin: 'com.google.gms.google-services'
